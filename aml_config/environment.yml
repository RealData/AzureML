# Environment variables set for the run.
environmentVariables:
  EXAMPLE_ENV_VAR: EXAMPLE_VALUE
# Python details
python:
# user_managed_dependencies=True indicates that the environmentwill be user managed. False indicates that AzureML willmanage the user environment.
  userManagedDependencies: true
# The python interpreter path
  interpreterPath: python
# Path to the conda dependencies file to use for this run. If a project
# contains multiple programs with different sets of dependencies, it may be
# convenient to manage those environments with separate files.
  condaDependenciesFile: aml_config/conda_dependencies.yml
# Docker details
docker:
# Set True to perform this run inside a Docker container.
  enabled: false
# Base image used for Docker-based runs.
  baseImage: mcr.microsoft.com/azureml/base:0.2.0
# Set False if necessary to work around shared volume bugs.
  sharedVolumes: true
# Run with NVidia Docker extension to support GPUs.
  gpuSupport: false
# Extra arguments to the Docker run command.
  arguments: []
# Image registry that contains the base image.
  baseImageRegistry:
# DNS name or IP address of azure container registry(ACR)
    address:
# The username for ACR
    username:
# The password for ACR
    password:
# Spark details
spark:
# List of spark repositories.
  repositories:
  - https://mmlspark.azureedge.net/maven
  packages:
  - group: com.microsoft.ml.spark
    artifact: mmlspark_2.11
    version: '0.12'
  precachePackages: true
# Databricks details
databricks:
# List of maven libraries.
  mavenLibraries: []
# List of PyPi libraries
  pypiLibraries: []
# List of RCran libraries
  rcranLibraries: []
# List of JAR libraries
  jarLibraries: []
# List of Egg libraries
  eggLibraries: []
